==61349== Helgrind, a thread error detector
==61349== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==61349== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==61349== Command: ./threadpool --all
==61349== 
[36m[B01][0m Basic execution (3 tasks on 2 threads)... ==61350== 
==61350== Use --history-level=approx or =none to gain increased speed, at
==61350== the cost of reduced accuracy of conflicting-access information
==61350== For lists of detected and suppressed errors, rerun with: -s
==61350== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 221 from 16)
[1;32m‚úÖ PASSED[0m
[36m[B02][0m Wait without scheduling... ==61354== 
==61354== Use --history-level=approx or =none to gain increased speed, at
==61354== the cost of reduced accuracy of conflicting-access information
==61354== For lists of detected and suppressed errors, rerun with: -s
==61354== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 110 from 13)
[1;32m‚úÖ PASSED[0m
[36m[B03][0m Serial execution with 1 thread... ==61360== 
==61360== Use --history-level=approx or =none to gain increased speed, at
==61360== the cost of reduced accuracy of conflicting-access information
==61360== For lists of detected and suppressed errors, rerun with: -s
==61360== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 278 from 20)
[1;32m‚úÖ PASSED[0m
[36m[B04][0m FIFO execution in single-thread mode... ==61363== 
==61363== Use --history-level=approx or =none to gain increased speed, at
==61363== the cost of reduced accuracy of conflicting-access information
==61363== For lists of detected and suppressed errors, rerun with: -s
==61363== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 488 from 20)
[1;32m‚úÖ PASSED[0m
[32m[C01][0m Stress with 1000 tasks... ==61366== 
==61366== Use --history-level=approx or =none to gain increased speed, at
==61366== the cost of reduced accuracy of conflicting-access information
==61366== For lists of detected and suppressed errors, rerun with: -s
==61366== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 49181 from 20)
[1;32m‚úÖ PASSED[0m
[32m[C02][0m Reusing the pool after wait... ==61376== 
==61376== Use --history-level=approx or =none to gain increased speed, at
==61376== the cost of reduced accuracy of conflicting-access information
==61376== For lists of detected and suppressed errors, rerun with: -s
==61376== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 250 from 17)
[1;32m‚úÖ PASSED[0m
[32m[C03][0m Multiple wait() calls... ==61382== 
==61382== Use --history-level=approx or =none to gain increased speed, at
==61382== the cost of reduced accuracy of conflicting-access information
==61382== For lists of detected and suppressed errors, rerun with: -s
==61382== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 179 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E01][0m Massive stress (10k tasks)... ==61388== 
==61388== Use --history-level=approx or =none to gain increased speed, at
==61388== the cost of reduced accuracy of conflicting-access information
==61388== For lists of detected and suppressed errors, rerun with: -s
==61388== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 490322 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E02][0m Long tasks then shutdown... ==61441== 
==61441== Use --history-level=approx or =none to gain increased speed, at
==61441== the cost of reduced accuracy of conflicting-access information
==61441== For lists of detected and suppressed errors, rerun with: -s
==61441== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 561 from 20)
[1;32m‚úÖ PASSED[0m
[35m[E03][0m Lots of short tasks on few threads... ==61447== 
==61447== Use --history-level=approx or =none to gain increased speed, at
==61447== the cost of reduced accuracy of conflicting-access information
==61447== For lists of detected and suppressed errors, rerun with: -s
==61447== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8503 from 21)
[1;32m‚úÖ PASSED[0m
[35m[E04][0m Detect potential deadlock... ==61451== ---Thread-Announcement------------------------------------------
==61451== 
==61451== Thread #2 was created
==61451==    at 0x4C3EA23: clone (clone.S:76)
==61451==    by 0x4C3EBA2: __clone_internal_fallback (clone-internal.c:64)
==61451==    by 0x4C3EBA2: __clone_internal (clone-internal.c:109)
==61451==    by 0x4BB154F: create_thread (pthread_create.c:297)
==61451==    by 0x4BB21A4: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==61451==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==61451==    by 0x4955EB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==61451==    by 0x11B604: std::thread::thread<test_potential_deadlock()::{lambda()#1}, , void>(test_potential_deadlock()::{lambda()#1}&&) (std_thread.h:164)
==61451==    by 0x11587D: test_potential_deadlock() (test_custom.cc:280)
==61451==    by 0x1301B4: bool std::__invoke_impl<bool, bool (*&)()>(std::__invoke_other, bool (*&)()) (invoke.h:61)
==61451==    by 0x12EE55: std::enable_if<!std::is_void<bool>::value, bool>::type std::__invoke_r<bool, bool (*&)()>(bool (*&)()) (invoke.h:138)
==61451==    by 0x12D505: std::_Function_handler<bool (), bool (*)()>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==61451==    by 0x12B3C9: std::function<bool ()>::operator()() const (std_function.h:591)
==61451== 
==61451== ----------------------------------------------------------------
==61451== 
==61451== Thread #2: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==61451==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==61451==    by 0x11572E: test_potential_deadlock()::{lambda()#1}::operator()() const (test_custom.cc:274)
==61451==    by 0x1283BF: void std::__invoke_impl<void, test_potential_deadlock()::{lambda()#1}>(std::__invoke_other, test_potential_deadlock()::{lambda()#1}&&) (invoke.h:61)
==61451==    by 0x1280E3: std::__invoke_result<test_potential_deadlock()::{lambda()#1}>::type std::__invoke<test_potential_deadlock()::{lambda()#1}>(test_potential_deadlock()::{lambda()#1}&&) (invoke.h:96)
==61451==    by 0x127CFF: void std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:292)
==61451==    by 0x127AEF: std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::operator()() (std_thread.h:299)
==61451==    by 0x12799F: std::thread::_State_impl<std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> > >::_M_run() (std_thread.h:244)
==61451==    by 0x4955DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==61451==    by 0x4854B7A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==61451==    by 0x4BB1AA3: start_thread (pthread_create.c:447)
==61451==    by 0x4C3EA33: clone (clone.S:100)
==61451== 
==61451== 
==61451== Use --history-level=approx or =none to gain increased speed, at
==61451== the cost of reduced accuracy of conflicting-access information
==61451== For lists of detected and suppressed errors, rerun with: -s
==61451== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 146 from 24)
[1;31m‚ùå FAILED[0m
[35m[E05][0m Simulated pendingTasks tracking... ==61462== 
==61462== Use --history-level=approx or =none to gain increased speed, at
==61462== the cost of reduced accuracy of conflicting-access information
==61462== For lists of detected and suppressed errors, rerun with: -s
==61462== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4377 from 20)
[1;32m‚úÖ PASSED[0m
[34m[F01][0m Schedule from multiple threads... ==61468== 
==61468== Use --history-level=approx or =none to gain increased speed, at
==61468== the cost of reduced accuracy of conflicting-access information
==61468== For lists of detected and suppressed errors, rerun with: -s
==61468== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 119182 from 18)
[1;32m‚úÖ PASSED[0m
[34m[F02][0m Schedule after destruction (invalid use)... ==61494== 
==61494== Use --history-level=approx or =none to gain increased speed, at
==61494== the cost of reduced accuracy of conflicting-access information
==61494== For lists of detected and suppressed errors, rerun with: -s
==61494== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 132 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F03][0m Schedule inside another task... ==61498== 
==61498== Use --history-level=approx or =none to gain increased speed, at
==61498== the cost of reduced accuracy of conflicting-access information
==61498== For lists of detected and suppressed errors, rerun with: -s
==61498== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 241 from 12)
[1;32m‚úÖ PASSED[0m
[34m[F04][0m Wait blocks until all tasks finish... ==61504== 
==61504== Use --history-level=approx or =none to gain increased speed, at
==61504== the cost of reduced accuracy of conflicting-access information
==61504== For lists of detected and suppressed errors, rerun with: -s
==61504== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 132 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F06][0m Many waits in parallel... ==61516== 
==61516== Use --history-level=approx or =none to gain increased speed, at
==61516== the cost of reduced accuracy of conflicting-access information
==61516== For lists of detected and suppressed errors, rerun with: -s
==61516== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2323 from 21)
[1;32m‚úÖ PASSED[0m
[34m[F07][0m High contention on atomic counter... ==61527== 
==61527== Use --history-level=approx or =none to gain increased speed, at
==61527== the cost of reduced accuracy of conflicting-access information
==61527== For lists of detected and suppressed errors, rerun with: -s
==61527== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 49024 from 20)
[1;32m‚úÖ PASSED[0m
[34m[F08][0m Destroy pool immediately after scheduling... ==61539== 
==61539== Use --history-level=approx or =none to gain increased speed, at
==61539== the cost of reduced accuracy of conflicting-access information
==61539== For lists of detected and suppressed errors, rerun with: -s
==61539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 516 from 20)
[1;32m‚úÖ PASSED[0m
[34m[F09][0m Interleaved schedule/wait execution... ==61543== 
==61543== Use --history-level=approx or =none to gain increased speed, at
==61543== the cost of reduced accuracy of conflicting-access information
==61543== For lists of detected and suppressed errors, rerun with: -s
==61543== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2944 from 26)
[1;32m‚úÖ PASSED[0m
[34m[F10][0m Multiple schedule/wait rounds... ==61548== 
==61548== Use --history-level=approx or =none to gain increased speed, at
==61548== the cost of reduced accuracy of conflicting-access information
==61548== For lists of detected and suppressed errors, rerun with: -s
==61548== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F11][0m Multiple wait() calls inside tasks... ==61549== 
==61549== Use --history-level=approx or =none to gain increased speed, at
==61549== the cost of reduced accuracy of conflicting-access information
==61549== For lists of detected and suppressed errors, rerun with: -s
==61549== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F12][0m Concurrent schedule/wait in parallel... ==61550== 
==61550== Use --history-level=approx or =none to gain increased speed, at
==61550== the cost of reduced accuracy of conflicting-access information
==61550== For lists of detected and suppressed errors, rerun with: -s
==61550== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 10978 from 23)
[1;32m‚úÖ PASSED[0m
[31m[H01][0m Wait inside task should deadlock... ==61562== 
==61562== Use --history-level=approx or =none to gain increased speed, at
==61562== the cost of reduced accuracy of conflicting-access information
==61562== For lists of detected and suppressed errors, rerun with: -s
==61562== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[33m[L01][0m Destructor waits for tasks completion... ==61563== 
==61563== Use --history-level=approx or =none to gain increased speed, at
==61563== the cost of reduced accuracy of conflicting-access information
==61563== For lists of detected and suppressed errors, rerun with: -s
==61563== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 107 from 16)
[1;32m‚úÖ PASSED[0m
[33m[L02][0m Repeated pool creation and destruction... ==61566== 
==61566== Use --history-level=approx or =none to gain increased speed, at
==61566== the cost of reduced accuracy of conflicting-access information
==61566== For lists of detected and suppressed errors, rerun with: -s
==61566== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 56947 from 20)
[1;32m‚úÖ PASSED[0m
[91m[M01][0m Schedule nullptr function... ==61867== 
==61867== Use --history-level=approx or =none to gain increased speed, at
==61867== the cost of reduced accuracy of conflicting-access information
==61867== For lists of detected and suppressed errors, rerun with: -s
==61867== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 66 from 13)
[1;32m‚úÖ PASSED[0m
[91m[M02][0m wait() during infinite rescheduling... ==61871== 
==61871== Use --history-level=approx or =none to gain increased speed, at
==61871== the cost of reduced accuracy of conflicting-access information
==61871== For lists of detected and suppressed errors, rerun with: -s
==61871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[96m[N01][0m Deep nested task scheduling... ==61872== 
==61872== Use --history-level=approx or =none to gain increased speed, at
==61872== the cost of reduced accuracy of conflicting-access information
==61872== For lists of detected and suppressed errors, rerun with: -s
==61872== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 304 from 23)
[1;32m‚úÖ PASSED[0m
[96m[N02][0m Extreme nested scheduling (1000)... ==61879== 
==61879== Use --history-level=approx or =none to gain increased speed, at
==61879== the cost of reduced accuracy of conflicting-access information
==61879== For lists of detected and suppressed errors, rerun with: -s
==61879== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 62118 from 23)
[1;32m‚úÖ PASSED[0m
[95m[T01][0m Parallel speedup benchmark (4 tasks)... ==61896== 
==61896== Use --history-level=approx or =none to gain increased speed, at
==61896== the cost of reduced accuracy of conflicting-access information
==61896== For lists of detected and suppressed errors, rerun with: -s
==61896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 306 from 16)
[1;32m‚úÖ PASSED[0m

========================================
Ran 31 tests.
‚ùå SOME TESTS FAILED
========================================
==61349== 
==61349== Use --history-level=approx or =none to gain increased speed, at
==61349== the cost of reduced accuracy of conflicting-access information
==61349== For lists of detected and suppressed errors, rerun with: -s
==61349== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
